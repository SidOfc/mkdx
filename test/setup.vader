Execute (Setup):
  if (!exists('g:vim_dev__vader_settings'))
    " set the filetype to initialize settings merge with settings from $MYVIMRC
    let g:vim_dev__vader_ft = &ft
    setf markdown

    let g:vim_dev__vader_settings = deepcopy(g:mkdx#settings)
    let g:mkdx#settings = {
        \ 'image_extension_pattern': 'a\?png\|jpe\?g\|gif',
        \ 'restore_visual':          1,
        \ 'enter':                   { 'enable': 1, 'shift': 0, 'malformed': 1, 'o': 1, 'shifto': 1 },
        \ 'map':                     { 'prefix': '<leader>', 'enable': 1 },
        \ 'tokens':                  { 'enter': ['-', '*', '>'], 'bold': '**', 'italic': '*',
        \                              'list': '-', 'fence': '', 'header': '#', 'strike': '' },
        \ 'checkbox':                { 'toggles': [' ', '-', 'x'], 'update_tree': 2, 'initial_state': ' ', 'match_attrs': { 'mkdxCheckboxEmpty': '', 'mkdxCheckboxPending': '', 'mkdxCheckboxComplete': '' } },
        \ 'toc':                     { 'text': 'TOC', 'list_token': '-', 'position': 0, 'update_on_write': 0,
        \                              'details': { 'enable': 0, 'summary': 'Click to expand {{toc.text}}',
        \                                           'nesting_level': -1, 'child_count': 5, 'child_summary': 'show {{count}} items' } },
        \ 'table':                   { 'divider': '|', 'header_divider': '-',
        \                              'align': { 'left': [], 'center': [], 'right': [],
        \                                         'default': 'center' } },
        \ 'links':                   { 'external': { 'enable': 0, 'timeout': 3, 'host': '', 'relative': 1,
        \                                            'user_agent':  'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/9001.0.0000.000 vim-mkdx/1.10.0' },
        \                              'fragment': { 'jumplist': 1, 'complete': 1 } },
        \ 'highlight':               { 'enable': 0 },
        \ 'auto_update':             { 'enable': 1 },
        \ 'fold':                    { 'enable': 0, 'components': ['toc', 'fence'] }
      \ }

    call mkdx#testing(1)
  endif

